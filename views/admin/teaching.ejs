<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IPS Event</title>
</head>

<style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            background-color: #fff;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        th, td {
            padding: 12px 15px;
            border: 1px solid #ddd;
            text-align: left;
        }
        th {
            background-color: #007BFF;
            color: white;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        tr:hover {
            background-color: #f1f1f1;
        }
        .edit, .delete {
            color: #007BFF;
            cursor: pointer;
        }
        .edit:hover, .delete:hover {
            text-decoration: underline;
        }
</style>

<body>

    <div>
        <table>
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Name</th>
                    <th>Course</th>
                    <th>Role</th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody>
                <% for(var i = 0; i < Teaching.length; i++) { %>
                    <tr>
                        <td>
                            <img src="/uploads/<%= Teaching[i].image %>" alt="Image" style="width: 50px; height: 50px;">
                        </td>
                        <td>
                            <%= Teaching[i].name %>
                            <input type="hidden" value="<%= Teaching[i].name %>" id="name_<%= Teaching[i]._id %>">
                        </td>
                        <td>
                            <%= Teaching[i].course %>
                            <input type="hidden" value="<%= Teaching[i].course %>" id="course_<%= Teaching[i]._id %>">
                        </td>
                        <td>
                            <%= Teaching[i].role %>
                            <input type="hidden" value="<%= Teaching[i].role %>" id="role_<%= Teaching[i]._id %>">
                        </td>
                        <td>
                            <button onclick="openEditForm('<%= Teaching[i]._id %>')">Edit</button>
                        </td>
                        <td>
                            <button onclick="deleteTeaching('<%= Teaching[i]._id %>')">Delete</button>
                        </td>
                    </tr>
                    <% } %>
                    
            </tbody>    
        </table>
    </div>

    <div id="editFormPopup" style="display: none;">
        <form id="editFormteaching" enctype="multipart/form-data">
            <input type="hidden" id="editId" name="id">
            
            <label for="name">Name:</label>
            <input type="text" id="editName" name="name"><br>
        
            <label for="course">Course:</label>
            <input type="text" id="editCourse" name="course"><br>
        
            <label for="role">Role:</label>
            <input type="text" id="editRole" name="role"><br>
        
            <label for="image">Upload Image:</label>
            <input type="file" id="editImage" name="image"><br>
        
            <button type="button" onclick="submitEditForm()">Save---</button>
            <button type="button" onclick="closeEditForm()">Cancel</button>
        </form>
        
    </div>

<script>
// Open the popup form and populate with current data
function openEditForm(id) {
    // Get the hidden input values based on the ID
    const name = document.getElementById('name_' + id).value;
    const course = document.getElementById('course_' + id).value;
    const role = document.getElementById('role_' + id).value;

    console.log("Name:", name, "Course:", course, "Role:", role, "ID:", id);  // Debugging

    // Populate the form fields with the retrieved values
    const editIdField = document.getElementById('editId');
    const editNameField = document.getElementById('editName');
    const editCourseField = document.getElementById('editCourse');
    const editRoleField = document.getElementById('editRole');

        // Check if elements are found
    console.log("editIdField:", editIdField);
    console.log("editNameField:", editNameField);
    console.log("editCourseField:", editCourseField);
    console.log("editRoleField:", editRoleField);

    if (editIdField && editNameField && editCourseField && editRoleField) {
        // Set the values
        editIdField.value = id;
        editNameField.value = name;
        editCourseField.value = course;
        editRoleField.value = role;

        // Log to verify values
        console.log("ID set in form:", editIdField.value);
        console.log("Name set in form:", editNameField.value);
        console.log("Course set in form:", editCourseField.value);
        console.log("Role set in form:", editRoleField.value);
    } else {
        console.error("One or more form fields are missing.");
    }

    // Show the form popup
    document.getElementById('editFormPopup').style.display = 'block';
}


// Close the popup form
function closeEditForm() {
    document.getElementById('editFormPopup').style.display = 'block';
}

// Submit the form data (including the image) to the backend
function submitEditForm() {
    const form = document.getElementById('editFormteaching');  // Make sure the form ID is correct
    
    console.log("Form field:", form);  // Debugging
    console.log("ID:", form.elements['id']);

    // Access form elements
    const idField = form.elements['id'];
    const nameField = form.elements['name'];
    const courseField = form.elements['course'];
    const roleField = form.elements['role'];
    const imageField = form.elements['image'];
    console.log("idField", idField.value)

    // Debugging to ensure these fields exist
    if (!nameField || !courseField || !roleField || !imageField) {
        console.error("One or more form fields are missing.");
        return;
    }

    // Create a FormData object to send the data
    const formData = new FormData();
    formData.append('id', idField.value);  // Append the ID
    formData.append('name', nameField.value);          // Append the name
    formData.append('course', courseField.value);      // Append the course
    formData.append('role', roleField.value);          // Append the role
    formData.append('image', imageField.files[0]);     // Append the image file

    // Debugging to ensure FormData is populated correctly
    for (let [key, value] of formData.entries()) {
        console.log(key, value);
    }

    // Send the form data to the backend
    fetch('/admin/update-teaching', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.message === 'Teaching record updated successfully') {
            // Optionally reload the page or update the UI without a page reload
            // window.location.reload();  // Refresh page to show updated data
        } else {
            console.error('Update failed:', data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}


function deleteTeaching(id) {
    fetch('/admin/delete-teaching', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ id: id }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.message === 'Teaching record deleted successfully') {
            window.location.reload(); // Refresh page to show updated data
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

</script>


</body>
</html>